>> Consigna: Utilizando Mongo Shell, crear una base de datos llamada ecommerce que contenga dos colecciones: mensajes y productos.
    *use ecommerce
    *db.createCollection("mensajes") 
    *db.createCollection("productos") 

1. Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando 
   en el entregable con base de datos MariaDB. 
    *db.mensajes.insert(
        [            
            { autor: "autor1", texto:"hola 1", fyh: new Timestamp() },
            { autor: "autor2", texto:"hola 2", fyh: new Timestamp() },
            { autor: "autor3", texto:"hola 3", fyh: new Timestamp() },
            { autor: "autor4", texto:"hola 4", fyh: new Timestamp() },
            { autor: "autor5", texto:"hola 5", fyh: new Timestamp() },
            { autor: "autor6", texto:"hola 6", fyh: new Timestamp() },
            { autor: "autor7", texto:"hola 7", fyh: new Timestamp() },
            { autor: "autor8", texto:"hola 8", fyh: new Timestamp() },
            { autor: "autor9", texto:"hola 9", fyh: new Timestamp() },
            { autor: "autor10", texto:"hola 10", fyh: new Timestamp() }
        ]
    )

2. Definir las claves de los documentos en relación a los campos de las tablas de esa base. En el caso de los productos, poner valores al campo precio entre los 100 y 5000 
   pesos(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 
   *db.productos.insert(
        [            
            { codigo: "PROD1", nombre:"Producto 1", precio: 120, stock:100 },
            { codigo: "PROD2", nombre:"Producto 2", precio: 580, stock:100 },
            { codigo: "PROD3", nombre:"Producto 3", precio: 900, stock:100 },
            { codigo: "PROD4", nombre:"Producto 4", precio: 1280, stock:100 },
            { codigo: "PROD5", nombre:"Producto 5", precio: 1700, stock:100 },
            { codigo: "PROD6", nombre:"Producto 6", precio: 2300, stock:100 },
            { codigo: "PROD7", nombre:"Producto 7", precio: 2860, stock:100 },
            { codigo: "PROD8", nombre:"Producto 8", precio: 3350, stock:100 },
            { codigo: "PROD9", nombre:"Producto 9", precio: 4320, stock:100 },
            { codigo: "PROD10", nombre:"Producto 10", precio: 4990, stock:100 }
        ]
    )

3. Listar todos los documentos en cada colección.
    *db.mensajes.find()
    *db.productos.find()

4. Mostrar la cantidad de documentos almacenados en cada una de ellas.
    *db.mensajes.count()  
    *db.productos.count()  

5.Realizar un CRUD sobre la colección de productos:
    a. Agregar un producto más en la colección de productos 
        *db.productos.insertOne({ codigo: "PROD11", nombre:"Producto 11", precio: 3700, stock:111 })

    b. Realizar una consulta por nombre de producto específico:
        1.Listar los productos con precio menor a 1000 pesos.
        *db.productos.find( { precio: { $lt: 1000 } } )

        2.Listar los productos con precio entre los 1000 a 3000 pesos.
        *db.productos.find( { precio: { $gt: 1000 , $lt: 3000 }  } )  

        3.Listar los productos con precio mayor a 3000 pesos.
        *db.productos.find( { precio: { $gt: 3000 } } )

        4.Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
        *db.productos.find({},{"nombre":1}).sort({"precio" : 1}).skip(2).limit(1)
        
    c. Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
        *db.productos.updateMany({},{$set: {"stock": 100} })

    d. Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
        *db.productos.updateMany({ precio:{$gt: 4000} },{$set: {"stock": 0} })

    e. Borrar los productos con precio menor a 1000 pesos 
        *db.productos.deleteMany({precio: { $lt: 1000 } })

6.Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
    *db.createUser(
        {
            user: "pepe",
            pwd: "asd456",
            roles: [
             { role: "read", db: "ecommerce" }
            ]
        }
    )

